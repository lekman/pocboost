name: Request - Environment - DevOps Sandbox

# Requests an environment to be provisioned for DevOps engineers
# For info see https://github.com/RDIT-DPS/devops-platform-documentation/blob/feature-docs-security-lifecycle-management/docs/design/ondemand-environment-devops-engineer.md

on:
    workflow_dispatch: # on demand
        inputs:
            owner:
                description: 'Email address of the environment owner'
                required: true
                type: string
            version:
                description: 'Choose application and environment version'
                required: true
                type: choice
                options: 
                - 'Boost 1.1'
                - 'Boost 1.2'
                default: 'Boost 1.2'
            retention:
                description: 'Choose retention period - environment will be decommissioned after this period'
                required: true
                type: choice
                options: 
                - '1 week'
                - '2 weeks'
                - '4 weeks'
                - '8 weeks'
                - '10 weeks'
                default: '2 weeks'

env:
    SOMETHING: './foo'

jobs:
    params:
        name: 'Set parameters'
        runs-on: ubuntu-latest
        outputs:
            owner: ${{ steps.set-variable.outputs.owner }}
            version: ${{ steps.set-variable.outputs.version }}
            retention: ${{ steps.set-variable.outputs.retention }}
        steps:
          - name: Check params
            shell: bash
            id: set-variable
            run: |
                echo 'Setting and validating parameters'

            # TODO: verify email, should be a valid email address using Regecx and possibly only be within AZ org.
            # Also, does this need to be a specific set of users?
            
    provision:        
        name: 'Provision using Terraform'
        runs-on: ubuntu-latest
        outputs:
            repourl: ${{ steps.terraform.outputs.url }}
            reponame: ${{ steps.terraform.outputs.name }}
        steps:
          - name: Send Terraform payload
            shell: bash
            id: terraform
            run: |
                echo 'Sending payload...'

            # TODO: Based on input above, add correct payload and call the Terraform API

    # email:
    #     name: Send mail
    #     needs: [ params, provision]
    #     uses: dawidd6/action-send-mail@v3
    #     with:
    #         # Specify connection via URL (replaces server_address, server_port, secure,
    #         # username and password)
    #         #
    #         # Format:
    #         #
    #         #  * smtp://user:password@server:port
    #         #  * smtp+starttls://user:password@server:port
    #         connection_url: ${{secrets.MAIL_CONNECTION}}
    #         # Required mail server address if not connection_url:
    #         server_address: smtp.gmail.com
    #         # Server port, default 25:
    #         server_port: 465
    #         # Optional whether this connection use TLS (default is true if server_port is 465)
    #         secure: true
    #         # Optional (recommended) mail server username:
    #         username: ${{secrets.MAIL_USERNAME}}
    #         # Optional (recommended) mail server password:
    #         password: ${{secrets.MAIL_PASSWORD}}
    #         # Required mail subject:
    #         subject: Github Actions job result
    #         # Required recipients' addresses:
    #         to: obiwan@example.com,yoda@example.com
    #         # Required sender full name (address can be skipped):
    #         from: Luke Skywalker # <user@example.com>
    #         # Optional plain body:
    #         body: Build job of ${{github.repository}} completed successfully!
    #         # Optional HTML body read from file:
    #         html_body: file://README.html
    #         # Optional carbon copy recipients:
    #         cc: kyloren@example.com,leia@example.com
    #         # Optional blind carbon copy recipients:
    #         bcc: r2d2@example.com,hansolo@example.com
    #         # Optional recipient of the email response:
    #         reply_to: luke@example.com
    #         # Optional Message ID this message is replying to:
    #         in_reply_to: <random-luke@example.com>
    #         # Optional unsigned/invalid certificates allowance:
    #         ignore_cert: true
    #         # Optional converting Markdown to HTML (set content_type to text/html too):
    #         convert_markdown: true
    #         # Optional attachments:
    #         attachments: attachments.zip,git.diff,./dist/static/*.js
    #         # Optional priority: 'high', 'normal' (default) or 'low'
    #         priority: low